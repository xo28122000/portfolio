{"version":3,"sources":["screens/homescreen/index.js","screens/aboutscreen/homecontent.js","screens/aboutscreen/academiccontent.js","screens/aboutscreen/index.js","screens/projectscreen/index.js","screens/contactscreen/index.js","App.js","serviceWorker.js","index.js"],"names":["HomeScreen","state","backgroundColor","projectsTextColor","aboutTextColor","contactTextColor","componentDidMount","projectText","document","getElementById","aboutText","contactText","onmouseover","setState","onmouseleave","id","style","this","className","height","textAlign","to","color","Component","Homecontent","borderRadius","padding","fontSize","marginTop","display","Academiccontent","AboutScreen","currentContent","actionListeneradded","content1","onkeyup","e","canSelectElements","getElementsByClassName","i","eleList","length","classList","contains","findSelectedEle","code","remove","add","keyCode","console","log","key","paddingTop","paddingBottom","minHeight","minWidth","ProjectScreen","ContactScreen","App","TransitionGroup","path","React","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e95fdb01.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport \"./style.css\";\nclass HomeScreen extends Component {\n  state = {\n    backgroundColor: \"#ffffff\",\n    projectsTextColor: \"#000000\",\n    aboutTextColor: \"#000000\",\n    contactTextColor: \"#000000\"\n  };\n  componentDidMount = () => {\n    const projectText = document.getElementById(\"projectText\");\n    const aboutText = document.getElementById(\"aboutText\");\n    const contactText = document.getElementById(\"contactText\");\n    projectText.onmouseover = () => {\n      this.setState({\n        backgroundColor: \"RGBA(0, 0, 0, 1)\",\n        aboutTextColor: \"RGBA(255, 255, 255, 0.1)\",\n        contactTextColor: \"RGBA(255, 255, 255, 0.1)\",\n        projectsTextColor: \"#ffffff\"\n      });\n    };\n    projectText.onmouseleave = () => {\n      this.setState({\n        backgroundColor: \"#ffffff\",\n        aboutTextColor: \"#000000\",\n        projectsTextColor: \"#000000\",\n        contactTextColor: \"#000000\"\n      });\n    };\n    aboutText.onmouseover = () => {\n      this.setState({\n        backgroundColor: \"RGBA(0, 0, 0, 1)\",\n        projectsTextColor: \"RGBA(255, 255, 255, 0.1)\",\n        aboutTextColor: \"#ffffff\",\n        contactTextColor: \"RGBA(255, 255, 255, 0.1)\"\n      });\n    };\n    aboutText.onmouseleave = () => {\n      this.setState({\n        backgroundColor: \"#ffffff\",\n        aboutTextColor: \"#000000\",\n        projectsTextColor: \"#000000\",\n        contactTextColor: \"#000000\"\n      });\n    };\n    contactText.onmouseover = () => {\n      this.setState({\n        backgroundColor: \"RGBA(0, 0, 0, 1)\",\n        projectsTextColor: \"RGBA(255, 255, 255, 0.1)\",\n        aboutTextColor: \"RGBA(255, 255, 255, 0.1)\",\n        contactTextColor: \"#ffffff\"\n      });\n    };\n    contactText.onmouseleave = () => {\n      this.setState({\n        backgroundColor: \"#ffffff\",\n        projectsTextColor: \"#000000\",\n        aboutTextColor: \"#000000\",\n        contactTextColor: \"#000000\"\n      });\n    };\n  };\n  render() {\n    return (\n      <div\n        id=\"homeroot\"\n        style={{ backgroundColor: this.state.backgroundColor }}\n      >\n        <div className=\"container-fluid\" style={{ height: \"100%\" }}>\n          <div className=\"row align-items-center row-division extra-large-PressStart \">\n            <div className=\"col\" style={{ textAlign: \"start\" }}>\n              <NavLink to=\"/project\">\n                <div\n                  className=\"buttonText\"\n                  id=\"projectText\"\n                  style={{ color: this.state.projectsTextColor }}\n                >\n                  PROJECTS\n                </div>\n              </NavLink>\n            </div>\n          </div>\n          <div className=\"row align-items-center row-division extra-large-PressStart \">\n            <div className=\"col\" style={{ textAlign: \"center\" }}>\n              <NavLink to=\"/about\">\n                <div\n                  className=\"buttonText\"\n                  id=\"aboutText\"\n                  style={{ color: this.state.aboutTextColor }}\n                >\n                  ABOUT\n                </div>\n              </NavLink>\n            </div>\n          </div>\n          <div className=\"row align-items-center row-division extra-large-PressStart \">\n            <div className=\"col\" style={{ textAlign: \"end\" }}>\n              <NavLink to=\"/contact\">\n                <div\n                  className=\"buttonText\"\n                  id=\"contactText\"\n                  style={{ color: this.state.contactTextColor }}\n                >\n                  CONTACT\n                </div>\n              </NavLink>\n            </div>\n          </div>\n          <div className=\"row align-items-end footer-row\">\n            <div className=\"col\" style={{ textAlign: \"end\" }}>\n              Jainam Shah\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomeScreen;\n","import React from \"react\";\n\nconst Homecontent = (\n  <div\n    style={{\n      backgroundColor: \"#60fe4b\",\n      borderRadius: \"30px\",\n      padding: \"20px\"\n    }}\n  >\n    <div className=\"centerAlignedText extra-large-PressStart\">\n      <div className=\"col\">Hello, I'm Jainam</div>\n    </div>\n\n    <div\n      className=\"row  PressStart\"\n      style={{ fontSize: \"calc(15px + 5%)\", marginTop: \"6vh\" }}\n    >\n      <div className=\"col\">\n        {\"// I\"} <br />\n        {\"// code\"} <br />\n        {\"// live in SF,\"} CA\n        <br />\n        {\"// study CS @ SFSU\"}\n        <br />\n        {\"// am interested in\"}\n        <br />\n        {\"// Web Dev & Computer Vision\"}\n      </div>\n      {/* [\"Academics\",\"Experiences\",\"Resume\",\"Personal\",\"Next\"] */}\n      <div className=\"col\">\n        <div>\n          <div\n            id=\"Academics\"\n            className=\"canSelect selectedElement\"\n            style={{\n              padding: \"5px\",\n              display: \"inline-block\"\n            }}\n          >\n            > My Academics\n            <br />\n          </div>\n        </div>\n        <div>\n          <div\n            id=\"Experiences\"\n            className=\"canSelect\"\n            style={{ padding: \"5px\", display: \"inline-block\" }}\n          >\n            > My Experiences\n            <br />\n          </div>\n        </div>\n        <div>\n          <div\n            id=\"Resume\"\n            className=\"canSelect\"\n            style={{ padding: \"5px\", display: \"inline-block\" }}\n          >\n            > My Resume\n            <br />\n          </div>\n        </div>\n        <div>\n          <div\n            id=\"Personal\"\n            className=\"canSelect\"\n            style={{ padding: \"5px\", display: \"inline-block\" }}\n          >\n            > More about my personal life\n            <br />\n          </div>\n        </div>\n        <div>\n          <div\n            id=\"Next\"\n            className=\"canSelect\"\n            style={{ padding: \"5px\", display: \"inline-block\" }}\n          >\n            > Next: Projects\n            <br />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Homecontent;\n","import React from \"react\";\n\nconst Academiccontent = (\n  <div\n    style={{\n      backgroundColor: \"#60fe4b\",\n      borderRadius: \"30px\",\n      padding: \"20px\"\n    }}\n  >\n    <div className=\"centerAlignedText extra-large-PressStart\">\n      <div className=\"col\">My Academics</div>\n    </div>\n\n    <div\n      className=\"row  PressStart\"\n      style={{ fontSize: \"calc(15px + 5%)\", marginTop: \"6vh\" }}\n    >\n      here goes something\n    </div>\n  </div>\n);\n\nexport default Academiccontent;\n","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport Homecontent from \"./homecontent\";\nimport Academiccontent from \"./academiccontent\";\nclass AboutScreen extends Component {\n  state = { currentContent: Homecontent, actionListeneradded: false };\n  render() {\n    const findSelectedEle = eleList => {\n      var i = 0;\n      for (i = 0; i < eleList.length; i++) {\n        if (eleList[i].classList.contains(\"selectedElement\")) {\n          break;\n        }\n      }\n      return i;\n    };\n\n    const content1 = <div>hello here </div>;\n    document.onkeyup = e => {\n      if (this.state.currentContent === Homecontent) {\n        var canSelectElements = document.getElementsByClassName(\"canSelect\");\n        var i = findSelectedEle(canSelectElements);\n        if (e.code === \"ArrowUp\") {\n          canSelectElements[i].classList.remove(\"selectedElement\");\n\n          if (i !== 0) {\n            canSelectElements[i - 1].classList.add(\"selectedElement\");\n          } else {\n            canSelectElements[canSelectElements.length - 1].classList.add(\n              \"selectedElement\"\n            );\n          }\n        } else if (e.code === \"ArrowDown\") {\n          canSelectElements[i].classList.remove(\"selectedElement\");\n\n          if (i !== canSelectElements.length - 1) {\n            canSelectElements[i + 1].classList.add(\"selectedElement\");\n          } else {\n            canSelectElements[0].classList.add(\"selectedElement\");\n          }\n        } else if (e.keyCode === 13) {\n          if (i === 0) {\n            this.setState({ currentContent: Academiccontent });\n          } else {\n            this.setState({ currentContent: content1 });\n          }\n        } else {\n          console.log(\"use arrow keys and enter\");\n        }\n      }\n      if (e.key === \"Escape\") {\n        if (this.state.currentContent !== Homecontent) {\n          this.setState({ currentContent: Homecontent });\n        }\n      } else {\n        console.log(\"use escape to go back\");\n      }\n    };\n\n    return (\n      <div id=\"aboutRoot\">\n        <div className=\"container\">\n          <div\n            style={{\n              paddingTop: \"25vh\",\n              paddingBottom: \"20vh\"\n            }}\n          >\n            <div\n              className=\"container-fluid\"\n              style={{\n                backgroundColor: \"#4bfee9\",\n                borderRadius: \"30px\",\n                padding: \"5px\",\n                minHeight: \"200px\",\n                minWidth: \"900px\"\n              }}\n            >\n              <div id=\"displayContent\">{this.state.currentContent}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AboutScreen;\n\n//  {/* thinsg to display:\n// //               who am i,\n// //               where im from,\n// //               what are my interests,\n// //               what have i studied\n// //               where have i worked\n// //               */}\n","import React, { Component } from \"react\";\nclass ProjectScreen extends Component {\n  state = {};\n  render() {\n    return <div>project</div>;\n  }\n}\n\nexport default ProjectScreen;\n","import React, { Component } from \"react\";\nclass ContactScreen extends Component {\n  state = {};\n  render() {\n    return <div>contact</div>;\n  }\n}\n\nexport default ContactScreen;\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport HomeScreen from \"./screens/homescreen\";\nimport AboutScreen from \"./screens/aboutscreen\";\nimport ProjectScreen from \"./screens/projectscreen\";\nimport ContactScreen from \"./screens/contactscreen\";\n\nclass App extends React.Component {\n  state = {};\n\n  render() {\n    return (\n      <Router>\n        <TransitionGroup>\n          <Switch>\n            <Route path=\"/about\">\n              <AboutScreen />\n            </Route>\n            <Route path=\"/project\">\n              <ProjectScreen />\n            </Route>\n            <Route path=\"/contact\">\n              <ContactScreen />\n            </Route>\n            <Route path=\"/\">\n              <HomeScreen />\n            </Route>\n          </Switch>\n        </TransitionGroup>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}